program         -> declaration* EOF ;

declaration     -> varDecl
                | constDecl
                | statement ;

varDecl         -> "let" IDENTIFIER ( "," IDENTIFIER )* ( "=" expression )? ";" ;
constDecl       -> "const" IDENTIFIER ( "," IDENTIFIER )* "=" expression ";" ;

statement       -> exprStmt
                | ifStmt
                | printStmt
                | block ;

ifStmt          -> "if" "(" expression ")" statement ( "else" statement )? ;

block           -> "{" declaration* "}" ;

exprStmt        -> expression ";" ;
printStmt       -> "print" "(" expression ")" ";"? ;


expression      -> assignment ;
assignment      -> IDENTIFIER "=" assignment
                | logic_or ;
logic_or        -> logic_and ("||" logic_and)* ;
logic_and       -> equality ("&&" equality)* ;
equality        -> comparison ( ( "!=" | "==" ) comparison )* ;
comparison      -> term ( ( ">" | ">=" | "<" | "<=" ) term )* ;
term            -> factor ( ( "-" | "+" ) factor )* ;
factor          -> expo ( ( "/" | "*" | "%" ) expo )* ;
expo            -> unary ("**" unary)* ;
unary           -> ( "!" | "-" | "+" ) unary | primary ;

primary         -> INTEGER | REAL | STRING
                | "true" | "false" | "null"
                | "(" expression ")" ;
                | IDENTIFIER ;